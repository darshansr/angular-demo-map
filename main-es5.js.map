{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/incident-list/incident-list.component.ts","webpack:///src/app/incident-list/incident-list.component.html","webpack:///src/app/map-area/map-area.component.ts","webpack:///src/app/map-area/map-area.component.html","webpack:///src/app/pop-up/pop-up.component.ts","webpack:///src/app/pop-up/pop-up.component.html","webpack:///src/app/shared/directive/sort-by.directive.ts","webpack:///src/app/shared/dom-helper.ts","webpack:///src/app/shared/incidentService.ts","webpack:///src/app/shared/mock-api.ts","webpack:///src/app/shared/pipe/delay-conversion.ts","webpack:///src/app/shared/sort.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","incidentService","title","pipe","getIncident","subscribe","val","console","log","incidentLists","selector","templateUrl","styleUrls","AppModule","provide","useClass","declarations","providers","bootstrap","IncidentListComponent","sortService","show","incidentMapping","changes","currentValue","undefined","data","forEach","point","index","type","sort","a","b","delay","incident","modalIncident","prop","sortDelay","modelEvent","MapAreaComponent","dom","points","createMap","createMarker","div","document","getElementById","svg","createSvg","setAttribute","staticMap","createSvgImg","appendChild","generateLatLon","filter","markerImg","marker","latlan","addEventListener","staticImg","after","x","Math","floor","random","y","push","PopUpComponent","popup","incidentMagnitude","incidentValue","item","parseInt","modelOpen","emit","SortByDirective","sorted","event","preventDefault","next","sortProperty","value","DomFactory","tag","attribute","content","element","createElement","textContent","createElementNS","svgElement","svgImgElement","elementProducer","providedIn","IncidentService","_http","url","get","response","MockXHRBackend","request","responseObserver","responseOptions","method","body","status","responseObject","complete","DelayConversion","secondsValue","hours","minutes","seconds","name","SortService","incidentList","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\r\nimport { timer } from 'rxjs';\r\nimport { flatMap, mergeMap } from 'rxjs/operators';\r\nimport { IncidentService,IncidentList } from './shared/incidentService';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'traffic-incident-app';\r\n  incidentLists:IncidentList[];\r\n\r\n\r\n  constructor(public incidentService:IncidentService) {\r\n  }\r\n  ngOnInit() {\r\n    timer(1000,20000)\r\n    .pipe(\r\n      flatMap(() => this.incidentService.getIncident())\r\n    )\r\n    .subscribe(val => \r\n        console.log(this.incidentLists=val)\r\n    );\r\n  }\r\n     \r\n}\r\n","\r\n\r\n    <main class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div class=\"col-3 leftcol\" ><app-incident-list [data]=\"incidentLists\"></app-incident-list></div>\r\n            <div class=\"col-9 rightcol\"><app-map-area [data]=\"incidentLists\">\r\n            </app-map-area> </div>\r\n          </div>  \r\n    </main>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { IncidentListComponent } from './incident-list/incident-list.component';\r\nimport { MapAreaComponent } from './map-area/map-area.component';\r\nimport { PopUpComponent } from './pop-up/pop-up.component';\r\nimport { DomFactory } from './shared/dom-helper'\r\nimport { HttpXhrBackend, HttpClientModule } from '@angular/common/http';\r\nimport { MockXHRBackend } from './shared/mock-api';\r\nimport { IncidentService } from './shared/incidentService';\r\nimport { DelayConversion } from './shared/pipe/delay-conversion';\r\nimport { SortService } from './shared/sort.service';\r\nimport { SortByDirective } from './shared/directive/sort-by.directive';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    IncidentListComponent,\r\n    MapAreaComponent,\r\n    PopUpComponent,\r\n    DelayConversion,\r\n    SortByDirective\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [DomFactory,IncidentService,SortService,\r\n    { provide: HttpXhrBackend, useClass: MockXHRBackend }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, Input, SimpleChanges } from '@angular/core';\r\nimport { IncidentList } from '../shared/incidentService';\r\nimport { SortService } from '../shared/sort.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-incident-list',\r\n  templateUrl: './incident-list.component.html',\r\n  styleUrls: ['./incident-list.component.css']\r\n})\r\nexport class IncidentListComponent implements OnInit {\r\n\r\n  @Input()\r\n  data: IncidentList[];\r\n  incidentLists: IncidentList[];\r\n  modalIncident: any;\r\n  show: boolean = false;\r\n\r\n  //create an interface to map incident\r\n  incidentMapping:object = {\r\n    0: 'default',\r\n    1: 'Jam',\r\n    2: 'Dangerous Conditions',\r\n    3: 'Lane closed'\r\n  };\r\n\r\n  constructor(private sortService: SortService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  //load the data into UI template by mapping incident value into new key value\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    // only run when property \"data\" changed\r\n    if (changes['data'].currentValue != undefined && this.data) {\r\n      this.data.forEach((point, index) => {\r\n        switch (point.type) {\r\n          case 1:\r\n            point['incident'] = this.incidentMapping['1'];\r\n            break;\r\n          case 2:\r\n            point['incident'] = this.incidentMapping['2'];\r\n            break;\r\n          case 3:\r\n            point['incident'] = this.incidentMapping['3'];\r\n            break;\r\n          default:\r\n            point['incident'] = this.incidentMapping['0'];\r\n            break;\r\n        }\r\n      })\r\n      this.incidentLists = this.data;\r\n      this.incidentLists = this.incidentLists.sort((a, b) => b.delay - a.delay);\r\n    }\r\n  }\r\n\r\n  //Best Approach is to create custom model as service to access across the application\r\n  public modelEvent(incident: any) {\r\n    this.modalIncident = incident\r\n    if (typeof incident == \"boolean\")\r\n      this.show = incident;\r\n  }\r\n\r\n  //TODO on click of header item in the incident list by ascending and descending\r\n  public sort(prop: boolean) {\r\n    this.sortService.sortDelay(this.data, prop);\r\n  }\r\n\r\n}\r\n","<div class=\"left-section\">\r\n  <div class=\"sidebarlist top_bar\">\r\n    <div>Details</div>\r\n    <div>Type</div>\r\n    <div>Delay</div>\r\n  </div>\r\n  <div class=\"scrollerDiv\">\r\n    <div class=\"sidebarlist list\" *ngFor=\"let incident of incidentLists; let i=index\" (click)=\"modelEvent(incident)\">\r\n      <div>{{incident.details}}</div>\r\n      <div>{{incident.incident}}</div>\r\n      <div appSortBy=\"delay\" (sorted)=\"sort($event)\">{{incident.delay | delay}}</div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<app-pop-up [incidentValue]=\"modalIncident\" [show]=\"show\" (popup)=\"modelEvent($event)\"></app-pop-up>","import { Component, OnInit, Input, SimpleChanges } from '@angular/core';\r\nimport { DomFactory } from '../shared/dom-helper'\r\nimport {  IncidentList } from '../shared/incidentService';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-map-area',\r\n  templateUrl: './map-area.component.html',\r\n  styleUrls: ['./map-area.component.css']\r\n})\r\nexport class MapAreaComponent implements OnInit {\r\n  div: HTMLElement;\r\n  @Input()\r\n  data: IncidentList[];\r\n  incidentLists: IncidentList[];\r\n  points = []\r\n  modalIncident: any;\r\n  show: boolean=false;\r\n  incidentMapping = {\r\n    0:'default.png',\r\n      1: 'jam.png',\r\n      2: 'dangerous_conditions.png',\r\n      3: 'lane_closed.png'\r\n    };\r\n\r\n\r\n  constructor(private dom: DomFactory) { }\r\n\r\n  ngOnInit() {\r\n    this.createMap()\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    // only run when property \"data\" changed\r\n    if (changes['data']) {\r\n      this.createMarker(this.data)\r\n    }\r\n  }\r\n  createMap() {\r\n    this.div = document.getElementById('mapView');\r\n    let svg = this.dom.createSvg();\r\n\r\n    this.dom.setAttribute(svg, { \"viewBox\": \"0 0 3094 1865\" })\r\n    let staticMap = this.dom.createSvgImg();\r\n    this.dom.setAttribute(staticMap, {\r\n      \"id\":\"staticImage\",\r\n      \"href\": \"../../assets/img/berlin_map.png\",\r\n      \"width\": \"100%\",\r\n      \"height\": \"100%\",\r\n      \"preserveAspectRatio\": \"none\"\r\n    })\r\n    svg.appendChild(staticMap);\r\n    this.div.appendChild(svg)\r\n  }\r\n  createMarker(data:IncidentList[]) {\r\n    this.generateLatLon(data)\r\n    this.points.forEach((point, index) => {\r\n      data.filter((incident) =>{\r\n        if (incident.id === point.id) {\r\n          let markerImg = this.dom.createSvgImg();\r\n          let marker = this.incidentMapping[incident.type] || this.incidentMapping[0];\r\n          this.dom.setAttribute(markerImg,\r\n            {\r\n              \"id\": point.id,\r\n              \"href\": '../../assets/img/' + marker,\r\n              \"x\":point.latlan[0],\r\n              \"y\":point.latlan[1],\r\n              \"width\": '100',\r\n              \"height\": '100',\r\n              \"class\":\"cursor\",\r\n              \"preserveAspectRatio\":\"none\"\r\n            })\r\n            markerImg.addEventListener(\"click\", () => this.modelEvent(incident))\r\n          let staticImg=document.getElementById(\"staticImage\")\r\n         staticImg.after(markerImg);\r\n        }\r\n        else{\r\n          //points are needs to be defined\r\n        }\r\n      });\r\n    })\r\n    \r\n  }\r\n  generateLatLon(data:IncidentList[]) {\r\n    if (data !== undefined) {\r\n      data.forEach((val, index) => {\r\n        let x = Math.floor(Math.random() * 3000);\r\n        let y = Math.floor(Math.random() * 1800);\r\n        this.points.push({ id: val.id, latlan: [x, y] })\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  public modelEvent(incident:any) {\r\n    this.modalIncident=incident\r\n    if(typeof incident == \"boolean\")\r\n        this.show=incident;\r\n  }\r\n}\r\n","<div class=\"right-section\">\r\n    <div id=\"mapView\">\r\n    </div>\r\n  </div>\r\n<app-pop-up  [incidentValue]=\"modalIncident\"\r\n[show]=\"show\"\r\n(popup)=\"modelEvent($event)\"></app-pop-up>\r\n","import { Component, Input, Output, EventEmitter, SimpleChanges } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-pop-up',\r\n  templateUrl: './pop-up.component.html',\r\n  styleUrls: ['./pop-up.component.css']\r\n})\r\n\r\nexport class PopUpComponent {\r\n  @Input() incidentValue: any;\r\n  @Input() show: boolean;\r\n  @Output() popup: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  incidentMagnitude={\r\n    0:'Unknown',\r\n    1:'Minor',\r\n    2:'Moderate',\r\n    3:'Major'\r\n  }\r\n\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    // only run when property \"data\" changed\r\n    if (changes['incidentValue'].currentValue != undefined && this.incidentValue) {\r\n      for (let item in this.incidentMagnitude) {\r\n         if(this.incidentValue['magnitude']===parseInt(item)){\r\n           this.incidentValue['magnitudeDetails']=this.incidentMagnitude[this.incidentValue['magnitude']]\r\n         }\r\n       }\r\n       this.modelOpen()\r\n    }\r\n    else {\r\n      this.show = false\r\n    }\r\n  }\r\n\r\n  modelOpen() {\r\n    this.show = true;\r\n  }\r\n\r\n  modelClose() {\r\n    this.popup.emit(false);\r\n  }\r\n\r\n}\r\n","<div class=\"modelBox\" *ngIf=\"show\" (click)=\"modelClose()\">\r\n  <div class=\"model\">\r\n    <div class=\"model-head\">\r\n      <p>Magnitude of delay <b>{{incidentValue.magnitudeDetails}}</b></p>\r\n    </div>\r\n    <div class=\"model-content\">\r\n      <p><b>From: </b>{{incidentValue.from}}</p>\r\n      <p><b>To: </b>{{  incidentValue.to}}</p>\r\n      <p><b>Details: </b> {{incidentValue.details}}</p>\r\n    </div>\r\n  </div>\r\n</div>","import { Directive, Input, Output, HostListener, EventEmitter } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[appSortBy]'\r\n})\r\n\r\nexport class SortByDirective {\r\n  private sortProperty: string;\r\n\r\n  @Output()\r\n  sorted: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  constructor() { }\r\n\r\n  @Input('appSortBy')\r\n  set sortBy(value: string) {\r\n    this.sortProperty = value;\r\n  }\r\n\r\n  @HostListener('click')\r\n  onClick() {\r\n    event.preventDefault();\r\n    this.sorted.next(this.sortProperty); // Raise clicked event\r\n  }\r\n    \r\n}","import { Injectable } from '@angular/core';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n}) \r\nexport class DomFactory {\r\n   \r\n    elementProducer(tag: any, attribute?:string,value?: string, content?:string) {\r\n        var element = document.createElement(tag);\r\n        if(typeof attribute !== 'undefined'){\r\n            element.setAttribute(attribute, value);\r\n        }\r\n        if (typeof content !== 'undefined') {\r\n            element.textContent = content;\r\n        }\r\n        return element;\r\n    }\r\n\r\n    private svgElement(tag: any,value: string){\r\n        return document.createElementNS(tag,value);\r\n    }\r\n\r\n    private svgImgElement(tag: any,value: string){\r\n        return document.createElementNS(tag,value);\r\n    }\r\n\r\n    \r\n    createSvg(){\r\n        return this.svgElement(\"http://www.w3.org/2000/svg\",\"svg\")\r\n    }\r\n    createSvgImg(){\r\n        return this.svgImgElement(\"http://www.w3.org/2000/svg\",\"image\")\r\n    }\r\n    createItem() {\r\n        return this.elementProducer('li', 'list-item','class');\r\n    }\r\n    createList() {\r\n        return this.elementProducer('ul', 'results-list','class');\r\n    }\r\n\r\n    setAttribute(tag:any,attribute:object){\r\n        for (var prop in attribute) {\r\n            tag.setAttribute(prop,attribute[prop]);\r\n        }\r\n        return tag;\r\n    }\r\n    \r\n    \r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/internal/operators/map';\r\n//import {map } from 'rxjs/add/operator/map';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class IncidentService {\r\n   \r\n    constructor(private _http: HttpClient) {\r\n\r\n    }\r\n\r\n    public getIncident() {\r\n        const url = '../../assets/incidents.json';\r\n        return this._http.get<IncidentListResponse>('incidentLists')\r\n            .pipe(\r\n                map((response: IncidentListResponse) => {\r\n                    return response.incidentLists;\r\n                })\r\n            );\r\n    }\r\n\r\n}\r\n\r\nexport interface IncidentListResponse {\r\n    incidentLists: IncidentList[];\r\n}\r\n\r\n\r\nexport interface IncidentList {\r\n    id: string;\r\n    type: number;\r\n    point: IMarkerPoint\r\n    from: string;\r\n    to: string;\r\n    details: string;\r\n    delay: number;\r\n    magnitude: number;\r\n}\r\n\r\nexport interface IMarkerPoint {\r\n    x: number;\r\n    y: number;\r\n}","import { HttpEvent, HttpRequest, HttpResponse, HttpBackend } from '@angular/common/http';\r\nimport { Observable, Observer } from 'rxjs';\r\nexport class MockXHRBackend implements HttpBackend {\r\n\r\n    \r\n    private incidentLists = [\r\n        {\r\n            \"id\": \"europe_HD_DE_TTL6000\",\r\n            \"type\": 1,\r\n            \"point\": {\r\n                \"x\": 13.072789,\r\n                \"y\": 52.388527\r\n            },\r\n            \"from\": \"Am Buchhorst (Arthur-Scheunert-Allee/L78)\",\r\n            \"to\": \"Potsdam-Brauhausberg - Friedrich-Engels-Straße (Heinrich-Mann-Allee/L78)\",\r\n            \"details\": \"stationary traffic\",\r\n            \"delay\": 232,\r\n            \"magnitude\": 2\r\n        },\r\n        {\r\n            \"id\": \"europe_HD_DE_TTL1211\",\r\n            \"type\": 2,\r\n            \"point\": {\r\n                \"x\": 13.045512,\r\n                \"y\": 52.395312\r\n            },\r\n            \"from\": \"Breite Straße - Feuerbachstraße (Zeppelinstraße/B2)\",\r\n            \"to\": \"Schopenhauerstraße (Hegelallee/B2)\",\r\n            \"details\": \"broken down vehicle\",\r\n            \"delay\": 135,\r\n            \"magnitude\": 1\r\n        },\r\n        {\r\n            \"id\": \"europe_HD_DE_TTL5231\",\r\n            \"type\": 1,\r\n            \"point\": {\r\n                \"x\": 13.57957,\r\n                \"y\": 52.462065\r\n            },\r\n            \"from\": \"Gehsenerstraße - Mittelheide (Mahlsdorfer Straße/L1152)\",\r\n            \"to\": \"Seelenbinderstraße (Bahnhofstraße/L1152)\",\r\n            \"details\": \"stationary traffic\",\r\n            \"delay\": 166,\r\n            \"magnitude\": 1\r\n        },\r\n        {\r\n            \"id\": \"europe_HD_DE_TTL4451\",\r\n            \"type\": 1,\r\n            \"point\": {\r\n                \"x\": 13.347768,\r\n                \"y\": 52.435064\r\n            },\r\n            \"from\": \"Paul-Schneider-Straße - Leonorenstraße (Kaiser-Wilhelm-Straße/L1092)\",\r\n            \"to\": \"Paul-Schneider-Straße - Leonorenstraße (Kaiser-Wilhelm-Straße/L1092)\",\r\n            \"details\": \"queuing traffic\",\r\n            \"delay\": 876,\r\n            \"magnitude\": 3\r\n        },\r\n        {\r\n            \"id\": \"europe_HD_DE_TTL2451\",\r\n            \"type\": 3,\r\n            \"point\": {\r\n                \"x\": 13.498329,\r\n                \"y\": 52.481859\r\n            },\r\n            \"from\": \"Blockdammweg (Rummelsburger Landstraße/L1075)\",\r\n            \"to\": \"Treskowallee - Edisonstraße (Rummelsburger Straße/L1075)\",\r\n            \"details\": \"carriageway reduced to one lane\",\r\n            \"delay\": 190,\r\n            \"magnitude\": 1\r\n        }\r\n    ]\r\n    handle(request: HttpRequest<any>): Observable<HttpEvent<any>> {\r\n        return new Observable((responseObserver: Observer<HttpResponse<any>>) => {\r\n            let responseOptions;\r\n            switch (request.method) {\r\n                case 'GET':\r\n                    if (request.url === 'incidentLists') {\r\n                        responseOptions = {\r\n                            body: { incidentLists: this.incidentLists },\r\n                            status: 200\r\n                        };\r\n                    }\r\n            }\r\n            const responseObject = new HttpResponse(responseOptions);\r\n            responseObserver.next(responseObject);\r\n            responseObserver.complete();\r\n            return () => {\r\n\r\n            };\r\n        })\r\n    }\r\n}\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\n\r\n@Pipe({name: 'delay'})\r\nexport class DelayConversion implements PipeTransform{\r\n    transform(secondsValue: any) {\r\n        if (secondsValue === 0) {\r\n            return 'No delay';\r\n        }\r\n        var hours = Math.floor(secondsValue / 3600),\r\n            minutes = Math.floor((secondsValue - hours * 3600) / 60),\r\n            seconds = secondsValue - hours * 3600 - minutes * 60;\r\n    \r\n        return (hours ? hours + 'h ' : '') + (minutes ? minutes + 'm ' : '') + (seconds ? seconds + 's' : '');\r\n       // throw new Error(\"Method not implemented.\");\r\n    }\r\n   \r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n\r\n@Injectable()\r\n\r\nexport class SortService{\r\n    \r\n   sortDelay(incidentList,sortDelay){\r\n    console.log(incidentList,sortDelay)\r\n   }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}